<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yn.dao.ArticleMapper">
	<resultMap id="BaseResultMap" type="com.yn.entity.Article">
		<id column="aid" property="id" />
		<result column="comment_counts" property="commentCounts"/>
		<result column="createDate" property="createDate"/>
		<result column="summary" property="summary"/>
		<result column="title" property="title"/>
		<result column="view_counts" property="viewCounts"/>
		<result column="weight" property="weight"/>
		<association property="author" javaType="com.yn.entity.User" >
			<id column="uid" jdbcType="INTEGER" property="id" />
			<result column="nickname" jdbcType="VARCHAR" property="nickname" />
		</association>
		<collection column="aid" select="getTag" property="tags" ofType="com.yn.entity.Tag" javaType="java.util.ArrayList">
		</collection>
	</resultMap>
	<resultMap id="BaseArticles" type="com.yn.entity.Article">
		<id column="aid" property="id" />
		<result column="comment_counts" property="commentCounts"/>
		<result column="createDate" property="createDate"/>
		<result column="title" property="title"/>
		<result column="view_counts" property="viewCounts"/>
		<association property="author" javaType="com.yn.entity.User" >
			<id column="uid" jdbcType="INTEGER" property="id" />
			<result column="avatar" jdbcType="VARCHAR" property="avatar" />
			<result column="nickname" jdbcType="VARCHAR" property="nickname" />
		</association>
		<association property="body" javaType="com.yn.entity.ArticleBody" >
			<id column="bid" jdbcType="INTEGER" property="id" />
			<result column="content" property="content" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
			<result column="content_html" property="contentHtml" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
		</association>
		<association property="category" javaType="com.yn.entity.Category" >
			<id column="cid" jdbcType="INTEGER" property="id" />
			<result column="categoryname" jdbcType="VARCHAR" property="categoryname" />
			<result column="description" jdbcType="VARCHAR" property="description" />
		</association>
		<collection column="aid" select="getTag" property="tags" ofType="com.yn.entity.Tag" javaType="java.util.ArrayList">
		</collection>
	</resultMap>

	<select id="selectById" parameterType="java.lang.Integer" resultMap="BaseArticles">
		select
		a.id as aid,a.comment_counts,DATE_FORMAT(a.create_date,'%Y-%m-%d %H:%i:%S') as createDate,a.title,a.view_counts,
		u.avatar,u.id as uid,u.nickname,b.id as bid,b.content_html,b.content,c.id as cid,c.categoryname,c.description
		from me_article a
		left join sys_user u on u.id = a.author_id
		left join me_article_body b on b.id = a.body_id
		left join me_category c on c.id = a.category_id
		where a.id = #{id,jdbcType=INTEGER} and a.deleted = 0
	</select>

	<select id="findAll" parameterType="java.lang.Integer" resultMap="BaseArticles">
		select
		a.id as aid,a.comment_counts,DATE_FORMAT(a.create_date,'%Y-%m-%d %H:%i:%S') as createDate,a.title,a.view_counts,
		u.avatar,u.id as uid,u.nickname,b.id as bid,b.content_html,b.content,c.id as cid,c.categoryname,c.description
		from me_article a
		left join sys_user u on u.id = a.author_id
		left join me_article_body b on b.id = a.body_id
		left join me_category c on c.id = a.category_id
		where a.deleted = 0
	</select>

	<select id="listArticleForms" resultType="com.yn.form.ArticleForm">
		select year(create_date) as year,month(create_date) as month,count(*) as count from me_article where deleted = 0 group by year(create_date),month(create_date)
	</select>

	<select id="listArticles" resultMap="BaseResultMap" parameterType="com.yn.form.ArticleForm">
		select
		a.id as aid,a.comment_counts, DATE_FORMAT(a.create_date,'%Y-%m-%d %H:%i:%S') as createDate, a.summary, a.title, a.view_counts, a.weight,
		u.id as uid,u.nickname
		from me_article a
		left join sys_user u on u.id = a.author_id
		<if test="tagId != null and tagId!=''">
		left join me_article_tag at on at.article_id = a.id and at.tag_id = #{tagId}
		</if>
		<if test="categoryId != null and categoryId!=''">
		left join me_category c on c.id = a.category_id and c.id=#{categoryId}
		</if>
		where a.deleted = 0
		<if test="year != null and year !=''">
		and year(a.create_date) = #{year}
		</if>
		<if test="month != null and month !=''">
		and month(a.create_date) = #{month}
		</if>
		<if test="orderBy != null">
		order by #{orderBy}
		</if>
	</select>

	<select id="listArticlesName" resultType="com.yn.entity.Article" parameterType="com.yn.form.ArticleForm">
		select
		a.id ,a.title
		from me_article a
		<if test="tagId != null and tagId!=''">
		join me_article_tag at on at.article_id = a.id and at.tag_id = #{tagId}
		</if>
		<if test="categoryId != null and categoryId!=''">
		join me_category c on c.id = a.category_id and c.id=#{categoryId}
		</if>
		where a.deleted = 0
		<if test="orderBy != null">
		order by #{orderBy}
		</if>
	</select>

	<select id="findOrderByViewsAndLimit" resultMap="BaseResultMap">
		select
		a.id as aid,a.comment_counts, a.create_date, a.summary, a.title, a.view_counts, a.weight,
		u.id as uid,u.nickname
		from me_article a
		left join sys_user u on u.id = a.author_id
		where a.deleted = 0
		order by a.view_counts desc
	</select>

	<select id="findOrderByCreateDateAndLimit" resultMap="BaseResultMap">
		select
		a.id as aid,a.comment_counts, a.create_date, a.summary, a.title, a.view_counts, a.weight,
		u.id as uid,u.nickname
		from me_article a
		left join sys_user u on u.id = a.author_id
		where a.deleted = 0
		order by a.create_date desc
	</select>

	<select id="getTag" resultType="com.yn.entity.Tag" parameterType="int">
		select DISTINCT 
		at.tag_id as id,t.tagname
		from me_article_tag at
		join me_tag t on at.tag_id = t.id
		where article_id = #{id,jdbcType=INTEGER}
	</select>

	<update id="deleteById" parameterType="java.lang.Integer">
		update me_article set deleted = 1
		where id = #{id,jdbcType=INTEGER}
	</update>

	<insert id="insertTags">
		<foreach collection="tags" index="index" item="tag">
			insert into me_article_tag (article_id,tag_id) values(#{articleId},#{tag.id});
	    </foreach>  
	</insert>

	<update id="addView" parameterType="java.lang.Integer">
		update me_article set view_counts = view_counts + 1 where id = #{id}
	</update>
	
	<update id="changeCount" parameterType="java.lang.Integer">
		update me_article set comment_counts = comment_counts + 1 where id = #{id}
	</update>
	
	<update id="reduceCount" parameterType="java.lang.Integer">
		update me_article a INNER join me_comment c on c.id = #{id} and c.article_id = a.id
		set a.comment_counts = a.comment_counts - 1
	</update>
	
	<delete id="deleteTags" parameterType="java.lang.Integer">
	    delete from me_article_tag where article_id = #{id,jdbcType=INTEGER}
	</delete>
</mapper>