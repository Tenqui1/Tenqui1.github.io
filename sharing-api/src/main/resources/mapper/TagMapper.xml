<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yn.dao.TagMapper">
  <resultMap id="BaseResultMap" type="com.yn.entity.Tag">
      <id column="id" javaType="java.lang.Integer" jdbcType="INTEGER" property="id"/>
      <result column="avatar" javaType="java.lang.String" jdbcType="VARCHAR" property="avatar"/>
      <result column="tagname" javaType="java.lang.String" jdbcType="VARCHAR" property="tagname"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, avatar, tagname
  </sql>

  <select id="findAll" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from me_tag
  </select>
  
  <select id="listHotTagsByArticleUse" parameterType="java.lang.Integer" resultType="com.yn.entity.Tag">
    select t.*,count(at.tag_id) as count from article_tag at
    right join me_tag t on t.id = at.tag_id
    group by t.id order by count(at.tag_id) desc limit #{limit}
  </select>
  
  <select id="findAllDetail" resultType="com.yn.vo.TagVO">
    select t.*,count(at.tag_id) as articles from article_tag at
    right join me_tag t on t.id = at.tag_id
    group by t.id
  </select>
  
  <select id="getTagDetail" parameterType="java.lang.Integer" resultType="com.yn.vo.TagVO">
    select t.*,count(at.tag_id) as articles from article_tag at
    right join me_tag t on t.id = at.tag_id
    where t.id = #{id}
    group by t.id
  </select>

</mapper>